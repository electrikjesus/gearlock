# Define variables
LIST_OPTS=(BOOTSOUND SECOND_GTTY UPDATE_CHECK DEFAULT_THEME NORECOVERY FIXFS LOAD_FROMFS)

# Define functions
checklist() {
	BACK_TITLE="$1" TITLE="$2" NUM_OPTIONS="$3" HEADER_TEXT="$4"
	shift 4

	CHOSEN_LIST=$(dialog --clear --colors \
		--ok-label "  ${_confirm_}  " \
		--nocancel \
		--backtitle "$BACK_TITLE" \
		--title "$TITLE" \
		--separate-output \
		--checklist "$HEADER_TEXT" \
		17 100 "$NUM_OPTIONS" "$@" 3>&1 1>&2 2>&3)

	ORIG_IFS="$IFS"
	IFS=$'\n'
	CHOSEN_LIST=($CHOSEN_LIST)
	IFS="$ORIG_IFS"

	CHOSEN=""
	for i in "${CHOSEN_LIST[@]}"; do
		CHOSEN+="\"$i\" "
	done

	printf '%s\n' "$CHOSEN"
}

update_value() {

	if grep -q "$1=" "$GEARLOCK_RC"; then
		sed -i "s|$1=.*|$1=\"$2\"|g" "$GEARLOCK_RC"
		return
	fi
	printf '%s\n' "\n$1=\"$2\"" >>"$GEARLOCK_RC"

}

fetch_value() { sed -n "s|^$1=||p" "$GEARLOCK_RC" | sed "s|\"||g" | head -n 1; }

set_ui_value() {

	if [ "$(fetch_value "$1")" == "yes" ] ||
		[ "$(fetch_value "$1")" == "/gearlock/etc/bootsound.wav" ] ||
		[ "$(fetch_value "$1")" == "metro" ] ||
		[ "$(fetch_value "$1")" == "classic" ] ||
		{ [ "$1" == FIXFS ] && [ -e "$GRROOT/fixfs" ]; }; then
		printf '%s\n' ON
		return
	fi
	printf '%s\n' OFF
}

ask_opts() {

	# Get input
	ANSWER=$(checklist "${_settings_back_title_}" " ${_settings_title_} " 6 \
		"\n${_settings_extra_instructions_} \n \n" \
		"${LIST_OPTS[0]}" "${_settings_bootsound_info_}" "$(set_ui_value "${LIST_OPTS[0]}")" \
		"${LIST_OPTS[1]}" "${_settings_gtty_info_}" "$(set_ui_value "${LIST_OPTS[1]}")" \
		"${LIST_OPTS[2]}" "${_settings_update_info_}" "$(set_ui_value "${LIST_OPTS[2]}")" \
		"${LIST_OPTS[3]}" "${_settings_default_theme_info_}" "$(set_ui_value "${LIST_OPTS[3]}")" \
		"${LIST_OPTS[4]}" "${_settings_norecovery_info_}" "$(set_ui_value "${LIST_OPTS[4]}")" \
		"${LIST_OPTS[5]}" "${_settings_fixfs_info_}" "$(set_ui_value "${LIST_OPTS[5]}")" \
		"${LIST_OPTS[6]}" "${_settings_loadfromfs_info_}" "$(set_ui_value "${LIST_OPTS[6]}")")

	# Convert $ANSWER into plain string
	ANSWER=($(eval printf '%s\n' "$ANSWER"))

}

setup_opts() {

	# First handle which options were unchecked.
	for allOPT in "${LIST_OPTS[@]}"; do
		[[ ! "${ANSWER[*]}" =~ .*$allOPT.* ]] && case "$allOPT" in
		DEFAULT_THEME | BOOTSOUND) update_value "$allOPT" "notset" ;;
		FIXFS) rm -f "$GRROOT/fixfs" ;;
		*) update_value "$allOPT" "no" ;;
		esac
	done

	# Handle Newly enabled options
	for newOPT in "${ANSWER[@]}"; do
		case "$newOPT" in
		DEFAULT_THEME) update_value "$newOPT" "$IT" ;;
		BOOTSOUND) update_value "$newOPT" "/gearlock/etc/bootsound.wav" ;;
		FIXFS) touch "$GRROOT/fixfs" ;;
		*) update_value "$allOPT" "yes" ;;
		esac
	done

}

### Main

# Collect input
ask_opts

while true; do
	if [ "${ANSWER[*]}" ]; then
		break
	fi

	if yesno "Lack of input" " ${_attention_} " "\n You seem to have disabled all options, do you want to continue ? " 7 70; then
		msgbox "Hmm ..." " Info " "\n ${_as_you_wish_} " 7 50 && break
	else
		ask_opts
	fi
done

# Perform operations as required
setup_opts
