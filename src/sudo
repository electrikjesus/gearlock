#!/bin/sh
VERSION="0.6"

print_info() {
	cat <<EOF
Gsudo $VERSION | Copyright (c) 2020 AXON | supreme-gamers.com
The android_x86 tty actions are done over the \`root:shell' usergroup.
Which causes some executable binaries to be working in a wrong manner even while it's still the root user partially.

For example,
+ If you try to extract any .7z archive with p7zip then you will notice that the source permissions of the archive wasnt preserved.
+ The same happens with most other executable binaries also, such as cpio, gzip etc.

Gsudo alter the default su for running commands as root while perserving the current environment and uses bash.
So, you can use gsudo without leaving the current shell just like any \`sudo' that you find on *unix distros.
Gsudo acts within the \`root:root' usergroup rather than \`root:shell'.

Usage: ${0##*/} <any-regular-command>

Example: ${0##*/} mkdir /data/new

Gsudo is a part of GearLock
For more information & bugreports visit https://supreme-gamers.com/gearlock
EOF
	exit 0
}

case "$1" in
-h | --help) print_info ;;
-v | --version) echo "$VERSION" ;;
*)
	# Ensure we have su binary
	! command -v su 1>/dev/null && {
		echo "Error: su binary is not present" && exit 1
	}
	suargs=$(printf '%q ' "$@")
	[ -z "${suargs}" ] && print_info

	if test -z "$RECOVERY" && test -z "$GSUDO"; then
		GSUDO="yes" su -c "PATH=$PATH; TERM=$TERM; bash -c \"$suargs\""
	else
		export GSUDO="yes" && "$@"
	fi
	;;
esac
